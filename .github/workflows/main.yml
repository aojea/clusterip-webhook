name: main

on: [push, pull_request, workflow_dispatch]

jobs:
  main:
    name: main
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install kubebuilder
        run: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)
          # download kubebuilder and extract it to tmp
          curl -L https://go.kubebuilder.io/dl/2.3.1/${os}/${arch} | tar -xz -C /tmp/
          # move to a long-term location and put it on your path
          # (you'll need to set the KUBEBUILDER_ASSETS env var if you put it somewhere else)
          sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
          export PATH=$PATH:/usr/local/kubebuilder/bin

      - name: Create single node cluster
        run: |
          kind create cluster 
    
      - name: Install cert-manager
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml

      - name: Install CRDs
        run: |
          make install
          make docker-build
          kind load docker-image controller:v1
          make deploy
          kubectl wait --for=condition=available --timeout=60s deployment/alloc-controller-manager -n alloc-system

      - name: Checkout allocator webhook
        uses: actions/checkout@v2
        with:
          path: src/github.com/aojea/allocator-webhook
          repository: aojea/allocator-webhook
      
      - name: Install allocator-webhook
        run: |
          cd src/github.com/aojea/allocator-webhook
          docker build -t allocator:v1 .
          # load the docker image in the cluster
          kind load docker-image allocator:v1
          # deploy the webhook
          kubectl apply -f manifests.yaml
          kubectl wait --for=condition=available --timeout=60s deployment/allocator-webhook -n system

      - name: Check services
        run: |
          kubectl get pods -A
          kubectl get services -A
          kubectl get iprange -A
          sleep 10
          kubectl -n kube-system get iprange allocator -o yaml
          kubectl create service clusterip test1 --tcp 80 --clusterip 10.96.11.13
          kubectl create service clusterip test2 --tcp 80
          sleep 10
          kubectl get services -A
          kubectl -n kube-system get iprange allocator -o yaml

      - name: Export logs
        if: always()
        run: |
          mkdir -p /tmp/kind/logs
          /usr/local/bin/kind export logs /tmp/kind/logs
          sudo chown -R $USER:$USER /tmp/kind/logs

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: kind-logs-${{ env.JOB_NAME }}-${{ github.run_id }}
          path: /tmp/kind/logs

      - name: Delete cluster
        run: /usr/local/bin/kind delete cluster
